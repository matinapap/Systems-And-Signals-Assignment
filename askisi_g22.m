function inverseFourierSeries(X, f0, numCoeffs)
    % Υπολογισμός της αντίστροφης σειράς Fourier
    %
    % Inputs:
    %   X: Διάνυσμα με τους συντελεστές της σειράς Fourier (vector)
    %   f0: Θεμελιώδης συχνότητα (scalar)
    %   numCoeffs: Επιθυμητός αριθμός συντελεστών στον τύπο αντιστροφής (scalar)
    
    % Υπολογισμός του συνολικού αριθμού συντελεστών
    N = length(X);
    
    % Έλεγχος αν ο επιθυμητός αριθμός συντελεστών είναι μεγαλύτερος από το N
    if numCoeffs > N
        error('Ο αριθμός των συντελεστών δεν μπορεί να είναι μεγαλύτερος από το μήκος του διανύσματος X.');
    end
    
    % Επιλογή των πρώτων numCoeffs συντελεστών
    X = X(1:numCoeffs);
    
    % Δημιουργία διανύσματος συχνοτήτων για το αντίστοιχο φάσμα
    k = 0:(numCoeffs-1);
    
    % Υπολογισμός της αντίστροφης σειράς Fourier
    t = (0:N-1)/f0;  % Διάστημα χρόνου
    y = zeros(1, N);  % Αρχικοποίηση του διανύσματος y
    for n = 1:numCoeffs
        y = y + X(n) * exp(j*2*pi*k(n)*t/N);
    end
    y = y / N;
    
    % Εμφάνιση του αποτελέσματος
    figure('Name','Αντιστροφή δεδομένης σειράς Fourier');
    plot(t, real(y), 'b');   % Διάγραμμα του πραγματικού μέρους του y
    title('Αντιστροφή δεδομένης σειράς Fourier');
    xlabel('Χρόνος (t)');
    ylabel('Ανακατασκευασμένο σήμα');
end

% Παράδειγμα χρήσης
X = [21.0000, -3.0000 + 5.1962i, -3.0000 + 1.7321i, -3.0000, -3.0000 - 1.7321i, -3.0000 - 5.1962i];
f0 = 1;  % Θεμελιώδης συχνότητα
numCoeffs = 6;  % Επιθυμητός αριθμός συντελεστών
inverseFourierSeries(X, f0, numCoeffs);
