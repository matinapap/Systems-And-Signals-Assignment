function computeFourierSeries(signal, T)
    % Υπολογισμός της σειράς Fourier χρησιμοποιώντας τον DFT μέσω της συνάρτησης fft
    %
    % Inputs:
    %   signal: Το σήμα πεπερασμένης διάρκειας T (vector)
    %   T: Η διάρκεια του σήματος (scalar)
    
    % Εφαρμογή της συνάρτησης fft στο σήμα
    X = fft(signal);
    
    % Δημιουργία διανύσματος συχνοτήτων για το αντίστοιχο φάσμα
    N = length(signal);         % Μέγεθος του σήματος
    freq = (0:N-1)*(1/T);       % Διάνυσμα συχνοτήτων
    
    % Εμφάνιση του φάσματος πλάτους
    figure('Name','Υπολογισμός σειράς Fourier');
    subplot(2, 1, 1);
    stem(freq, abs(X), 'b');   % Διάγραμμα στέλεχος του φάσματος πλάτους
    title('Φάσμα Πλάτους');
    xlabel('Συχνότητα (Hz)');
    ylabel('|X(k)|');
    
    % Εμφάνιση του φάσματος φάσης
    subplot(2, 1, 2);
    stem(freq, angle(X), 'r');  % Διάγραμμα στέλεχος του φάσματος φάσης
    title('Φάσμα Φάσης');
    xlabel('Συχνότητα (Hz)');
    ylabel('∠X(k)');
end

function inverseFourierSeries(X, f0, numCoeffs)
    % Υπολογισμός της αντίστροφης σειράς Fourier
    %
    % Inputs:
    %   X: Διάνυσμα με τους συντελεστές της σειράς Fourier (vector)
    %   f0: Θεμελιώδης συχνότητα (scalar)
    %   numCoeffs: Επιθυμητός αριθμός συντελεστών στον τύπο αντιστροφής (scalar)
    
    % Υπολογισμός του συνολικού αριθμού συντελεστών
    N = length(X);
    
    % Έλεγχος αν ο επιθυμητός αριθμός συντελεστών είναι μεγαλύτερος από το N
    if numCoeffs > N
        error('Ο αριθμός των συντελεστών δεν μπορεί να είναι μεγαλύτερος από το μήκος του διανύσματος X.');
    end
    
    % Επιλογή των πρώτων numCoeffs συντελεστών
    X = X(1:numCoeffs);
    
    % Δημιουργία διανύσματος συχνοτήτων για το αντίστοιχο φάσμα
    k = 0:(numCoeffs-1);
    
    % Υπολογισμός της αντίστροφης σειράς Fourier
    t = (0:N-1)/f0;  % Διάστημα χρόνου
    y = zeros(1, N);  % Αρχικοποίηση του διανύσματος y
    for n = 1:numCoeffs
        y = y + X(n) * exp(j*2*pi*k(n)*t/N);
    end
    y = y / N;
    
    % Εμφάνιση του αποτελέσματος
    figure('Name','Αντιστροφή δεδομένης σειράς Fourier');
    plot(t, real(y), 'b');   % Διάγραμμα του πραγματικού μέρους του y
    title('Αντιστροφή δεδομένης σειράς Fourier');
    xlabel('Χρόνος (t)');
    ylabel('Ανακατασκευασμένο σήμα');
end

% Παράδειγμα χρήσης
signal = double('P') * ones(1, 8);  % Δημιουργία σήματος με επαναλαμβανόμενες τιμές του χαρακτήρα 'P'
T = length(signal);                 % Διάρκεια του σήματος
computeFourierSeries(signal, T);

X = fft(signal);
f0 = 1;  % Θεμελιώδης συχνότητα
numCoeffs = length(X);  % Χρήση όλων των συντελεστών
inverseFourierSeries(X, f0, numCoeffs);
